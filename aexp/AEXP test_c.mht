From: "Saved by Windows Internet Explorer 7"
Subject: AEXP: test.c
Date: Wed, 17 Oct 2007 21:00:07 -0700
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0080_01C81100.B295E7E0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.0.6000.16545

This is a multi-part message in MIME format.

------=_NextPart_000_0080_01C81100.B295E7E0
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/test_8c-example.html

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>AEXP: test.c</TITLE>
<META http-equiv=3DContent-Type =
content=3Dtext/html;charset=3Diso-8859-1><LINK=20
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/doxygen.c=
ss"=20
type=3Dtext/css rel=3Dstylesheet><LINK=20
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/tabs.css"=
=20
type=3Dtext/css rel=3Dstylesheet>
<META content=3D"MSHTML 6.00.6000.16546" name=3DGENERATOR></HEAD>
<BODY><!-- Generated by Doxygen 1.5.1-p1 -->
<DIV class=3Dtabs>
<UL>
  <LI><A=20
  =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/index.htm=
l"><SPAN>Main&nbsp;Page</SPAN></A>=20

  <LI><A=20
  =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/modules.h=
tml"><SPAN>Modules</SPAN></A>=20

  <LI><A=20
  =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/files.htm=
l"><SPAN>Files</SPAN></A>=20

  <LI><A=20
  =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/examples.=
html"><SPAN>Examples</SPAN></A>=20
  </LI></UL></DIV>
<H1>test.c</H1>Following is the source code for a simple program to test =
the=20
functionality of the AEXP module.
<P>
<DIV class=3Dfragment><PRE class=3Dfragment><A name=3Dl00001></A>00001 =
<SPAN class=3Dpreprocessor>#include &lt;<A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/aexp_8h.h=
tml">aexp.h</A>&gt;</SPAN>
<A name=3Dl00002></A>00002 <SPAN class=3Dpreprocessor>#include =
&lt;stdlib.h&gt;</SPAN>
<A name=3Dl00003></A>00003 <SPAN class=3Dpreprocessor>#include =
&lt;stddef.h&gt;</SPAN>
<A name=3Dl00004></A>00004 <SPAN class=3Dpreprocessor>#include =
&lt;stdio.h&gt;</SPAN>
<A name=3Dl00005></A>00005 <SPAN class=3Dpreprocessor>#include =
&lt;cda.h&gt;</SPAN>
<A name=3Dl00006></A>00006 <SPAN class=3Dpreprocessor>#include =
&lt;tst.h&gt;</SPAN>
<A name=3Dl00007></A>00007=20
<A name=3Dl00008></A>00008 <SPAN class=3Dkeyword>static</SPAN> =
CDA_BOOL_t exp_test(
<A name=3Dl00009></A>00009     <SPAN class=3Dkeywordtype>void</SPAN>
<A name=3Dl00010></A>00010 );
<A name=3Dl00011></A>00011=20
<A name=3Dl00012></A>00012 <SPAN class=3Dkeyword>static</SPAN> =
CDA_BOOL_t evaluate_expr(=20
<A name=3Dl00013></A>00013     <SPAN class=3Dkeyword>const</SPAN> <SPAN =
class=3Dkeywordtype>char</SPAN> *str,=20
<A name=3Dl00014></A>00014     size_t     len
<A name=3Dl00015></A>00015 );
<A name=3Dl00016></A>00016=20
<A name=3Dl00017></A>00017 <SPAN class=3Dkeyword>static</SPAN> <SPAN =
class=3Dkeywordtype>void</SPAN> dump_bad_expr(=20
<A name=3Dl00018></A>00018     <A name=3Da0></A><A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gb3ec6d5ac4331d543a03f69bf7ad6246">AEXP_ID_t</A> expr
<A name=3Dl00019></A>00019 );
<A name=3Dl00020></A>00020=20
<A name=3Dl00021></A>00021 <SPAN class=3Dkeyword>static</SPAN> <SPAN =
class=3Dkeywordtype>void</SPAN> dump_errno(=20
<A name=3Dl00022></A>00022     <A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gb3ec6d5ac4331d543a03f69bf7ad6246">AEXP_ID_t</A> expr
<A name=3Dl00023></A>00023 );
<A name=3Dl00024></A>00024=20
<A name=3Dl00025></A>00025 <SPAN class=3Dcomment>/* Execute the two =
internal tests. If they pass, check for memory leaks, then</SPAN>
<A name=3Dl00026></A>00026 <SPAN class=3Dcomment> * evaluate test =
expressions entered manually by an operator. Test for memory</SPAN>
<A name=3Dl00027></A>00027 <SPAN class=3Dcomment> * leaks again before =
program termination.</SPAN>
<A name=3Dl00028></A>00028 <SPAN class=3Dcomment> */</SPAN>
<A name=3Dl00029></A>00029 <SPAN class=3Dkeywordtype>int</SPAN> main( =
<SPAN class=3Dkeywordtype>int</SPAN> argc, <SPAN =
class=3Dkeywordtype>char</SPAN> **argv )
<A name=3Dl00030></A>00030 {
<A name=3Dl00031></A>00031     <SPAN class=3Dkeywordtype>int</SPAN> =
result  =3D EXIT_SUCCESS;
<A name=3Dl00032></A>00032=20
<A name=3Dl00033></A>00033     <SPAN class=3Dkeywordflow>if</SPAN> ( !<A =
name=3Da1></A><A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gfad628b1d5e59d0bebfed3655d25c664">AEXP_token_test</A>( CDA_TRUE =
) )
<A name=3Dl00034></A>00034         result =3D EXIT_FAILURE;
<A name=3Dl00035></A>00035     <SPAN class=3Dkeywordflow>else</SPAN> =
<SPAN class=3Dkeywordflow>if</SPAN> ( !<A name=3Da2></A><A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gb052512bd074de8bb077e401c64e00de">AEXP_parse_test</A>( CDA_TRUE =
) )
<A name=3Dl00036></A>00036         result =3D EXIT_FAILURE;
<A name=3Dl00037></A>00037     <SPAN class=3Dkeywordflow>else</SPAN>
<A name=3Dl00038></A>00038     {
<A name=3Dl00039></A>00039         <A name=3Da3></A><A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#g1aac22a8681f15cda7662071ab305bd5">AEXP_shutdown</A>();
<A name=3Dl00040></A>00040         puts( <SPAN =
class=3Dstringliteral>"Dumping memory stats..."</SPAN> );
<A name=3Dl00041></A>00041         TST_dump_curr_mem_stats();
<A name=3Dl00042></A>00042     }
<A name=3Dl00043></A>00043=20
<A name=3Dl00044></A>00044     <SPAN class=3Dkeywordflow>if</SPAN> ( =
result =3D=3D EXIT_SUCCESS )
<A name=3Dl00045></A>00045     {
<A name=3Dl00046></A>00046         CDA_BOOL_t  more    =3D CDA_TRUE;
<A name=3Dl00047></A>00047         <SPAN =
class=3Dkeywordflow>while</SPAN> ( more )
<A name=3Dl00048></A>00048             more =3D exp_test();
<A name=3Dl00049></A>00049         puts( <SPAN =
class=3Dstringliteral>"Dumping memory stats..."</SPAN> );
<A name=3Dl00050></A>00050         TST_dump_curr_mem_stats();
<A name=3Dl00051></A>00051     }
<A name=3Dl00052></A>00052=20
<A name=3Dl00053></A>00053     <SPAN class=3Dkeywordflow>return</SPAN> =
result;
<A name=3Dl00054></A>00054 }
<A name=3Dl00055></A>00055=20
<A name=3Dl00056></A>00056 <SPAN class=3Dkeyword>static</SPAN> =
CDA_BOOL_t exp_test( <SPAN class=3Dkeywordtype>void</SPAN> )
<A name=3Dl00057></A>00057 {
<A name=3Dl00058></A>00058     CDA_BOOL_t  rcode       =3D CDA_TRUE;
<A name=3Dl00059></A>00059     size_t      len         =3D 0;
<A name=3Dl00060></A>00060     <SPAN class=3Dkeywordtype>char</SPAN>     =
   buff[1024];
<A name=3Dl00061></A>00061=20
<A name=3Dl00062></A>00062     printf( <SPAN =
class=3Dstringliteral>"exp&gt; "</SPAN> );
<A name=3Dl00063></A>00063     fflush( stdout );
<A name=3Dl00064></A>00064     fgets( buff, <SPAN =
class=3Dkeyword>sizeof</SPAN>(buff), stdin );
<A name=3Dl00065></A>00065     len =3D strlen( buff );
<A name=3Dl00066></A>00066=20
<A name=3Dl00067></A>00067     <SPAN class=3Dkeywordflow>if</SPAN> ( =
buff[len - 1] !=3D <SPAN class=3Dcharliteral>'\n'</SPAN> )
<A name=3Dl00068></A>00068     {
<A name=3Dl00069></A>00069         fflush( stdin );
<A name=3Dl00070></A>00070         printf( <SPAN =
class=3Dstringliteral>"Maximum input buffer length (%d) =
exceeded\n"</SPAN>, <SPAN class=3Dkeyword>sizeof</SPAN>(buff) - 2 );
<A name=3Dl00071></A>00071     }
<A name=3Dl00072></A>00072     <SPAN class=3Dkeywordflow>else</SPAN>
<A name=3Dl00073></A>00073     {
<A name=3Dl00074></A>00074         --len; <SPAN class=3Dcomment>// strip =
the '\n'</SPAN>
<A name=3Dl00075></A>00075         <SPAN class=3Dkeywordflow>if</SPAN> ( =
len =3D=3D 0 )
<A name=3Dl00076></A>00076             rcode =3D CDA_FALSE;
<A name=3Dl00077></A>00077         <SPAN class=3Dkeywordflow>else</SPAN>
<A name=3Dl00078></A>00078             evaluate_expr( buff, len );
<A name=3Dl00079></A>00079     }
<A name=3Dl00080></A>00080=20
<A name=3Dl00081></A>00081     <A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#g1aac22a8681f15cda7662071ab305bd5">AEXP_shutdown</A>();
<A name=3Dl00082></A>00082     <SPAN class=3Dkeywordflow>return</SPAN> =
rcode;
<A name=3Dl00083></A>00083 }
<A name=3Dl00084></A>00084=20
<A name=3Dl00085></A>00085 <SPAN class=3Dkeyword>static</SPAN> =
CDA_BOOL_t evaluate_expr( <SPAN class=3Dkeyword>const</SPAN> <SPAN =
class=3Dkeywordtype>char</SPAN> *str, size_t len )
<A name=3Dl00086></A>00086 {
<A name=3Dl00087></A>00087     CDA_BOOL_t  rcode   =3D CDA_FALSE;
<A name=3Dl00088></A>00088     <A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gb3ec6d5ac4331d543a03f69bf7ad6246">AEXP_ID_t</A>   expr    =3D =
<A name=3Da4></A><A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#g9a08929905036f46eb2619404cca618b">AEXP_create_expr</A>( str, =
len );
<A name=3Dl00089></A>00089     CDA_BOOL_t  valid   =3D <A =
name=3Da5></A><A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#g17a4d3dad890c128982a8c40ff423d34">AEXP_is_valid</A>( expr );
<A name=3Dl00090></A>00090     <SPAN class=3Dkeywordtype>int</SPAN>      =
   errnum  =3D <A name=3Da6></A><A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#g0f9943ab8b6fefa288055165273b3317">AEXP_get_errno</A>( expr );
<A name=3Dl00091></A>00091=20
<A name=3Dl00092></A>00092     <SPAN class=3Dkeywordflow>if</SPAN> ( =
!valid )
<A name=3Dl00093></A>00093         dump_bad_expr( expr );
<A name=3Dl00094></A>00094     <SPAN class=3Dkeywordflow>else</SPAN> =
<SPAN class=3Dkeywordflow>if</SPAN> ( errnum !=3D 0 )
<A name=3Dl00095></A>00095         dump_errno( expr );
<A name=3Dl00096></A>00096     <SPAN class=3Dkeywordflow>else</SPAN>
<A name=3Dl00097></A>00097     {
<A name=3Dl00098></A>00098         <SPAN =
class=3Dkeywordtype>double</SPAN>  result  =3D <A name=3Da7></A><A =
class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gb3a1014070ae7634030764f3870fb04a">AEXP_get_result</A>( expr );
<A name=3Dl00099></A>00099         printf( <SPAN =
class=3Dstringliteral>"\t%.*s =3D %g\n"</SPAN>, len, str, result );
<A name=3Dl00100></A>00100         rcode =3D CDA_TRUE;
<A name=3Dl00101></A>00101     }
<A name=3Dl00102></A>00102=20
<A name=3Dl00103></A>00103     <A name=3Da8></A><A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gb4c11d6b601c232ecc12c6873947bb80">AEXP_destroy_expr</A>( expr =
);
<A name=3Dl00104></A>00104     <SPAN class=3Dkeywordflow>return</SPAN> =
rcode;
<A name=3Dl00105></A>00105 }
<A name=3Dl00106></A>00106=20
<A name=3Dl00107></A>00107 <SPAN class=3Dkeyword>static</SPAN> <SPAN =
class=3Dkeywordtype>void</SPAN> dump_bad_expr( <A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gb3ec6d5ac4331d543a03f69bf7ad6246">AEXP_ID_t</A> expr )
<A name=3Dl00108></A>00108 {
<A name=3Dl00109></A>00109     <SPAN class=3Dkeyword>const</SPAN> <SPAN =
class=3Dkeywordtype>char</SPAN>  *str        =3D <A name=3Da9></A><A =
class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gc148b889aa779116911c86e22572ffde">AEXP_get_expr_str</A>( expr =
);
<A name=3Dl00110></A>00110     <SPAN class=3Dkeyword>const</SPAN> <SPAN =
class=3Dkeywordtype>char</SPAN>  *bad_str    =3D <A name=3Da10></A><A =
class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#ge85059baed9a0fcb8449d0189a7a2d39">AEXP_get_invalid_token</A>( =
expr, NULL );
<A name=3Dl00111></A>00111     ptrdiff_t   pos         =3D bad_str - =
str;
<A name=3Dl00112></A>00112     ptrdiff_t   inx         =3D 0;
<A name=3Dl00113></A>00113=20
<A name=3Dl00114></A>00114     printf( <SPAN =
class=3Dstringliteral>"\tInvalid expression:\n"</SPAN> );
<A name=3Dl00115></A>00115     printf( <SPAN =
class=3Dstringliteral>"\t%s\n\t"</SPAN>, str );
<A name=3Dl00116></A>00116     <SPAN class=3Dkeywordflow>for</SPAN> ( =
inx =3D 0 ; inx &lt; pos ; ++inx )
<A name=3Dl00117></A>00117         putchar( <SPAN class=3Dcharliteral>' =
'</SPAN> );
<A name=3Dl00118></A>00118     puts( <SPAN =
class=3Dstringliteral>"^"</SPAN> );
<A name=3Dl00119></A>00119 }
<A name=3Dl00120></A>00120=20
<A name=3Dl00121></A>00121 <SPAN class=3Dkeyword>static</SPAN> <SPAN =
class=3Dkeywordtype>void</SPAN> dump_errno( <A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gb3ec6d5ac4331d543a03f69bf7ad6246">AEXP_ID_t</A> expr )
<A name=3Dl00122></A>00122 {
<A name=3Dl00123></A>00123     <SPAN class=3Dkeyword>const</SPAN> <SPAN =
class=3Dkeywordtype>char</SPAN>  *expr_str   =3D <A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#gc148b889aa779116911c86e22572ffde">AEXP_get_expr_str</A>( expr =
);
<A name=3Dl00124></A>00124     <SPAN class=3Dkeywordtype>int</SPAN>      =
   errnum      =3D <A class=3Dcode =
href=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/group__ae=
xp.html#g0f9943ab8b6fefa288055165273b3317">AEXP_get_errno</A>( expr );
<A name=3Dl00125></A>00125     <SPAN class=3Dkeyword>const</SPAN> <SPAN =
class=3Dkeywordtype>char</SPAN>  *err_str    =3D strerror( errnum );
<A name=3Dl00126></A>00126     printf( <SPAN =
class=3Dstringliteral>"\t%s\n"</SPAN>, expr_str );
<A name=3Dl00127></A>00127     printf( <SPAN =
class=3Dstringliteral>"\tArithmetic error: %d, \"%s\"\n"</SPAN>, errnum, =
err_str );
<A name=3Dl00128></A>00128 }
</PRE></DIV>
<HR SIZE=3D1>

<ADDRESS style=3D"align: right"><SMALL>Generated on Wed Jan 3 18:56:46 =
2007 for=20
AEXP by&nbsp; <A href=3D"http://www.doxygen.org/index.html"><IMG =
alt=3Ddoxygen=20
src=3D"http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/doxygen.pn=
g"=20
align=3Dmiddle border=3D0></A> 1.5.1-p1 </SMALL></ADDRESS></BODY></HTML>

------=_NextPart_000_0080_01C81100.B295E7E0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/doxygen.png

iVBORw0KGgoAAAANSUhEUgAAAGQAAAAtCAMAAABvaz7CAAAABGdBTUEAANbY1E9YMgAAABl0RVh0
U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAABdUExURQAAAMe+zyImqcjO77a71tPa+pOi
3qCs4LbC9X+Hp9XZ6snKzuHi5nuO1I2h64iZ16Cy+KesucDAsd3dzvn56fX15+vr5UVEOdfWy2hn
XR8dE19YPEA6I21oVf///93AfzEAAAAfdFJOU///////////////////////////////////////
/wDNGXYQAAAD/0lEQVR42mKQQwAGCJCjOgAIIGQjGYSEhYWFaGAJQAChWCIsKioqTANLAAKILpYA
BBBdLAEIILpYAhBAdLEEIIDoYglAANHFEoAAQrVEhDaWAAQQmiUiIrSwBCCAGJALFJglDAyIEgaZ
QhQ6SKKIsgjBZkCVAAggiFJQeQIEIhBLYFxQEQNiQyghSQZJIWipAxGF64MogfGEkMQh6gECiAGs
QwQBhBnEheBsITBbWFxKXBgkA1QIDk0GiCiSPmEGJFOEGJAMBNkCEEAM0KhAUi4kgqwETEpCAlIY
oolBEMwQRzEKrAsWGMIoRsgBBBCDHNRQaGjBVMADD6IZhCUhHmCAJhBxsCUQdcIMUAcguQaiC6wB
IIAYILlDVAgYJEKi4HyCwgW6VxQChKQYwGygoyESQmBSBiQoDBYDhRnECIiRksIQnhxAAEHFJcQZ
GKTEJUAsBiiXAcoVgtoBEgKxJSTB4uJSElBtQiBVYDFJiFlCDAgVIDk5gABcjTECACAIAnlDQxJD
/39mIltOoCcA3D1UR8iS+GwFOJheS/s1jzzqElOB5lLJpJQl7hNAQAEeIOAGm8oNYjGgccVBFA+P
EFhIiAcCuIEmgdhCklIgeQkGbpgEUIQBzOOWAhsANEEOIICAarmAgBscPtwgFgOYC3QhmCsoLsjF
BVcBUQISBrFBMtzcEE0QVdyCkpKCguIMYDGgJWAxBjmAAAJGPAszEAgCY1oQxGAB8wVlIVwWiCBE
BcgrEC4LODOLs8DkuCFsFllZQSAtCDaCRUqKBaJWDiCAQKmeAwRYWFggNIQP5QrKQDgQNtBgGQgT
UmQIQrSANEkJIhQC3QkigZZAeHIAAQTKjIIcSICdQRrKEhAQYJdmBwnJyLBDjAYGIlgAVjDJCLKz
QwxiQDKFnQGsSAqsFsiTAwggcCkhKAAH7IIgnTCONAOIKSglBVLBzgm2BCSAVADKgKXA/mKHGwFi
gSwBcxnkAALQQAY3AMAgCPzRsILS7j9mpdaXXFBJeCFJtA+mIpSNyIiSM6gKUVmY/3SBXl7b2Gd2
LSB9PlcAgUpPQVYEYAQDJCYjlAWmBBk4+fj4OBmAXEZGIJtTRkoGJMLGgNDGitAPoRjkAAKIgYGJ
FMDACzQSqoUByOTlBQkALcGnhwEggBhIsoWBl5+fnxdmCT8c8OI1hAEggBiQazHCAGSJLIzDCbOD
k4AugAAirUYHmcvLgODxgr3BScgQgAAisdkANBfJSKBneIF8gmYABBCpbRMpKSk5tC4NYU0AAUSD
BhAmAAggulgCEEB0sQQggOhiCUAA0cUSgACiiyUAAUQXSwACiC6WAAQQXSwBCCC6WAIQQHSxBCCA
6GIJQIABAGRggsm9U7VPAAAAAElFTkSuQmCC

------=_NextPart_000_0080_01C81100.B295E7E0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/doxygen.css

BODY {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H1 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H2 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H3 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H4 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H5 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H6 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
P {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
CENTER {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
TD {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
TH {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
UL {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
DL {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
DIV {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
BODY {
	FONT-SIZE: 90%
}
TD {
	FONT-SIZE: 90%
}
H1 {
	FONT-SIZE: 160%; TEXT-ALIGN: center
}
H2 {
	FONT-SIZE: 120%
}
H3 {
	FONT-SIZE: 100%
}
CAPTION {
	FONT-WEIGHT: bold
}
DIV.qindex {
	BORDER-RIGHT: #84b0c7 1px solid; PADDING-RIGHT: 2px; BORDER-TOP: =
#84b0c7 1px solid; PADDING-LEFT: 2px; PADDING-BOTTOM: 2px; MARGIN: 2px; =
BORDER-LEFT: #84b0c7 1px solid; WIDTH: 100%; LINE-HEIGHT: 140%; =
PADDING-TOP: 2px; BORDER-BOTTOM: #84b0c7 1px solid; BACKGROUND-COLOR: =
#e8eef2; TEXT-ALIGN: center
}
DIV.nav {
	BORDER-RIGHT: #84b0c7 1px solid; PADDING-RIGHT: 2px; BORDER-TOP: =
#84b0c7 1px solid; PADDING-LEFT: 2px; PADDING-BOTTOM: 2px; MARGIN: 2px; =
BORDER-LEFT: #84b0c7 1px solid; WIDTH: 100%; LINE-HEIGHT: 140%; =
PADDING-TOP: 2px; BORDER-BOTTOM: #84b0c7 1px solid; BACKGROUND-COLOR: =
#e8eef2; TEXT-ALIGN: center
}
DIV.navtab {
	BORDER-RIGHT: #84b0c7 1px solid; PADDING-RIGHT: 2px; BORDER-TOP: =
#84b0c7 1px solid; PADDING-LEFT: 2px; PADDING-BOTTOM: 2px; MARGIN: 2px =
15px 2px 2px; BORDER-LEFT: #84b0c7 1px solid; PADDING-TOP: 2px; =
BORDER-BOTTOM: #84b0c7 1px solid; BACKGROUND-COLOR: #e8eef2; TEXT-ALIGN: =
center
}
TD.navtab {
	FONT-SIZE: 70%
}
A.qindex {
	FONT-WEIGHT: bold; COLOR: #1a419d; TEXT-DECORATION: none
}
A.qindex:visited {
	FONT-WEIGHT: bold; COLOR: #1a419d; TEXT-DECORATION: none
}
A.qindex:hover {
	BACKGROUND-COLOR: #ddddff; TEXT-DECORATION: none
}
A.qindexHL {
	BORDER-RIGHT: #9295c2 1px double; BORDER-TOP: #9295c2 1px double; =
FONT-WEIGHT: bold; BORDER-LEFT: #9295c2 1px double; COLOR: #ffffff; =
BORDER-BOTTOM: #9295c2 1px double; BACKGROUND-COLOR: #6666cc; =
TEXT-DECORATION: none
}
A.qindexHL:hover {
	COLOR: #ffffff; BACKGROUND-COLOR: #6666cc; TEXT-DECORATION: none
}
A.qindexHL:visited {
	COLOR: #ffffff; BACKGROUND-COLOR: #6666cc; TEXT-DECORATION: none
}
A.el {
	FONT-WEIGHT: bold; TEXT-DECORATION: none
}
A.elRef {
	FONT-WEIGHT: bold
}
A.code:link {
	FONT-WEIGHT: normal; COLOR: #0000ff; TEXT-DECORATION: none
}
A.code:visited {
	FONT-WEIGHT: normal; COLOR: #0000ff; TEXT-DECORATION: none
}
A.codeRef:link {
	FONT-WEIGHT: normal; COLOR: #0000ff
}
A.codeRef:visited {
	FONT-WEIGHT: normal; COLOR: #0000ff
}
A:hover {
	BACKGROUND-COLOR: #f2f2ff; TEXT-DECORATION: none
}
DL.el {
	MARGIN-LEFT: -1cm
}
.fragment {
	FONT-SIZE: 95%; FONT-FAMILY: monospace, fixed
}
PRE.fragment {
	BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 6px; BORDER-TOP: =
#cccccc 1px solid; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; MARGIN: 4px =
8px 4px 2px; BORDER-LEFT: #cccccc 1px solid; PADDING-TOP: 4px; =
BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #f5f5f5
}
DIV.ah {
	MARGIN-TOP: 3px; FONT-WEIGHT: bold; MARGIN-BOTTOM: 3px; COLOR: #ffffff; =
BACKGROUND-COLOR: black
}
DIV.groupHeader {
	MARGIN-TOP: 12px; FONT-WEIGHT: bold; MARGIN-BOTTOM: 6px; MARGIN-LEFT: =
16px
}
DIV.groupText {
	FONT-SIZE: 90%; MARGIN-LEFT: 16px; FONT-STYLE: italic
}
BODY {
	BACKGROUND: white; MARGIN-LEFT: 20px; COLOR: black; MARGIN-RIGHT: 20px
}
TD.indexkey {
	BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 10px; BORDER-TOP: =
#cccccc 1px solid; PADDING-LEFT: 10px; FONT-WEIGHT: bold; =
PADDING-BOTTOM: 2px; MARGIN: 2px 0px; BORDER-LEFT: #cccccc 1px solid; =
PADDING-TOP: 2px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: =
#e8eef2
}
TD.indexvalue {
	BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 10px; BORDER-TOP: =
#cccccc 1px solid; PADDING-LEFT: 10px; PADDING-BOTTOM: 2px; MARGIN: 2px =
0px; BORDER-LEFT: #cccccc 1px solid; PADDING-TOP: 2px; BORDER-BOTTOM: =
#cccccc 1px solid; FONT-STYLE: italic; BACKGROUND-COLOR: #e8eef2
}
TR.memlist {
	BACKGROUND-COLOR: #f0f0f0
}
P.formulaDsp {
	TEXT-ALIGN: center
}
IMG.formulaDsp {
=09
}
IMG.formulaInl {
	VERTICAL-ALIGN: middle
}
SPAN.keyword {
	COLOR: #008000
}
SPAN.keywordtype {
	COLOR: #604020
}
SPAN.keywordflow {
	COLOR: #e08000
}
SPAN.comment {
	COLOR: #800000
}
SPAN.preprocessor {
	COLOR: #806020
}
SPAN.stringliteral {
	COLOR: #002080
}
SPAN.charliteral {
	COLOR: #008080
}
.mdescLeft {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 8px; BORDER-TOP: #e0e0e0 1px; =
PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 4px; MARGIN: 0px; =
BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 0px; BORDER-BOTTOM: #e0e0e0 1px; =
FONT-STYLE: italic; BACKGROUND-COLOR: #fafafa
}
.mdescRight {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 8px; BORDER-TOP: #e0e0e0 1px; =
PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 4px; MARGIN: 0px; =
BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 0px; BORDER-BOTTOM: #e0e0e0 1px; =
FONT-STYLE: italic; BACKGROUND-COLOR: #fafafa
}
.memItemLeft {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 0px; BORDER-TOP: #e0e0e0 1px =
solid; PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 0px; MARGIN: =
4px; BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 1px; BORDER-BOTTOM: #e0e0e0 =
1px; BACKGROUND-COLOR: #fafafa
}
.memItemRight {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 8px; BORDER-TOP: #e0e0e0 1px =
solid; PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 0px; MARGIN: =
4px; BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 1px; BORDER-BOTTOM: #e0e0e0 =
1px; BACKGROUND-COLOR: #fafafa
}
.memTemplItemLeft {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 0px; BORDER-TOP: #e0e0e0 1px; =
PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 0px; MARGIN: 4px; =
BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 1px; BORDER-BOTTOM: #e0e0e0 1px; =
BACKGROUND-COLOR: #fafafa
}
.memTemplItemRight {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 8px; BORDER-TOP: #e0e0e0 1px; =
PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 0px; MARGIN: 4px; =
BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 1px; BORDER-BOTTOM: #e0e0e0 1px; =
BACKGROUND-COLOR: #fafafa
}
.memTemplParams {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 0px; BORDER-TOP: #e0e0e0 1px =
solid; PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 0px; MARGIN: =
4px; BORDER-LEFT: #e0e0e0 1px; COLOR: #606060; PADDING-TOP: 1px; =
BORDER-BOTTOM: #e0e0e0 1px; BACKGROUND-COLOR: #fafafa
}
.search {
	FONT-WEIGHT: bold; COLOR: #003399
}
FORM.search {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px
}
INPUT.search {
	FONT-WEIGHT: normal; FONT-SIZE: 75%; COLOR: #000080; BACKGROUND-COLOR: =
#e8eef2
}
TD.tiny {
	FONT-SIZE: 75%
}
A {
	COLOR: #1a41a8
}
A:visited {
	COLOR: #2a3798
}
.dirtab {
	BORDER-RIGHT: #84b0c7 1px solid; PADDING-RIGHT: 4px; BORDER-TOP: =
#84b0c7 1px solid; PADDING-LEFT: 4px; PADDING-BOTTOM: 4px; BORDER-LEFT: =
#84b0c7 1px solid; PADDING-TOP: 4px; BORDER-BOTTOM: #84b0c7 1px solid; =
BORDER-COLLAPSE: collapse
}
TH.dirtab {
	FONT-WEIGHT: bold; BACKGROUND: #e8eef2
}
HR {
	BORDER-RIGHT: medium none; BORDER-TOP: black 1px solid; BORDER-LEFT: =
medium none; BORDER-BOTTOM: medium none; HEIGHT: 1px
}
.memtemplate {
	FONT-WEIGHT: normal; FONT-SIZE: 80%; COLOR: #606060
}
.memnav {
	BORDER-RIGHT: #84b0c7 1px solid; PADDING-RIGHT: 2px; BORDER-TOP: =
#84b0c7 1px solid; PADDING-LEFT: 2px; PADDING-BOTTOM: 2px; MARGIN: 2px =
15px 2px 2px; BORDER-LEFT: #84b0c7 1px solid; PADDING-TOP: 2px; =
BORDER-BOTTOM: #84b0c7 1px solid; BACKGROUND-COLOR: #e8eef2; TEXT-ALIGN: =
center
}
.memitem {
	BORDER-RIGHT: #dedeee 1px solid; PADDING-RIGHT: 4px; BORDER-TOP: =
#dedeee 1px solid; PADDING-LEFT: 4px; PADDING-BOTTOM: 4px; BORDER-LEFT: =
#dedeee 1px solid; PADDING-TOP: 4px; BORDER-BOTTOM: #dedeee 1px solid; =
BACKGROUND-COLOR: #eef3f5; -moz-border-radius: 8px 8px 8px 8px
}
.memname {
	FONT-WEIGHT: bold; WHITE-SPACE: nowrap
}
.memdoc {
	PADDING-LEFT: 10px
}
.memproto {
	BORDER-RIGHT: #84b0c7 1px solid; BORDER-TOP: #84b0c7 1px solid; =
FONT-WEIGHT: bold; BORDER-LEFT: #84b0c7 1px solid; WIDTH: 100%; =
BORDER-BOTTOM: #84b0c7 1px solid; BACKGROUND-COLOR: #d5e1e8; =
-moz-border-radius: 8px 8px 8px 8px
}
.paramkey {
	TEXT-ALIGN: right
}
.paramtype {
	WHITE-SPACE: nowrap
}
.paramname {
	COLOR: #602020; FONT-STYLE: italic; WHITE-SPACE: nowrap
}
.ftvtree {
	MARGIN: 0.5em; FONT-FAMILY: sans-serif
}
.directory {
	FONT-WEIGHT: bold; FONT-SIZE: 9pt
}
.directory H3 {
	FONT-SIZE: 11pt; MARGIN: 1em 0px 0px
}
.directory > H3 {
	MARGIN-TOP: 0px
}
.directory P {
	MARGIN: 0px; WHITE-SPACE: nowrap
}
.directory DIV {
	DISPLAY: none; MARGIN: 0px
}
.directory IMG {
	VERTICAL-ALIGN: -30%
}

------=_NextPart_000_0080_01C81100.B295E7E0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://faculty.washington.edu/jstraub/dsa/aexp/doc/html/tabs.css

DIV.tabs {
	BACKGROUND: url(tab_b.gif) repeat-x 50% bottom; FLOAT: left; =
MARGIN-BOTTOM: 4px; WIDTH: 100%
}
DIV.tabs UL {
	PADDING-LEFT: 10px; MARGIN: 0px; LIST-STYLE-TYPE: none
}
DIV.tabs LI {
	PADDING-RIGHT: 0px; DISPLAY: inline; PADDING-LEFT: 0px; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-TOP: 0px
}
DIV.tabs FORM {
	PADDING-RIGHT: 0px; DISPLAY: inline; PADDING-LEFT: 0px; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-TOP: 0px
}
DIV.tabs FORM {
	FLOAT: right
}
DIV.tabs A {
	FONT-WEIGHT: bold; FONT-SIZE: x-small; BACKGROUND: url(tab_r.gif) =
no-repeat right top; FLOAT: left; BORDER-BOTTOM: #84b0c7 1px solid; =
TEXT-DECORATION: none
}
DIV.tabs A:hover {
	BACKGROUND-POSITION: 100% -150px
}
DIV.tabs A:link {
	COLOR: #1a419d
}
DIV.tabs A:visited {
	COLOR: #1a419d
}
DIV.tabs A:active {
	COLOR: #1a419d
}
DIV.tabs A:hover {
	COLOR: #1a419d
}
DIV.tabs SPAN {
	PADDING-RIGHT: 9px; DISPLAY: block; PADDING-LEFT: 9px; BACKGROUND: =
url(tab_l.gif) no-repeat left top; FLOAT: left; PADDING-BOTTOM: 5px; =
PADDING-TOP: 5px; WHITE-SPACE: nowrap
}
DIV.tabs INPUT {
	DISPLAY: inline; FONT-SIZE: 1em; FLOAT: right
}
DIV.tabs TD {
	FONT-WEIGHT: bold; FONT-SIZE: x-small; TEXT-DECORATION: none
}
DIV.tabs SPAN {
	FLOAT: none
}
DIV.tabs A:hover SPAN {
	BACKGROUND-POSITION: 0% -150px
}
DIV.tabs LI#current A {
	BORDER-TOP-WIDTH: 0px; BACKGROUND-POSITION: 100% -150px; =
BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: =
0px
}
DIV.tabs LI#current SPAN {
	BACKGROUND-POSITION: 0% -150px; PADDING-BOTTOM: 6px
}
DIV.nav {
	BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: none =
transparent scroll repeat 0% 0%; BORDER-LEFT: medium none; =
BORDER-BOTTOM: #84b0c7 1px solid
}

------=_NextPart_000_0080_01C81100.B295E7E0--
