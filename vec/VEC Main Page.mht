From: "Saved by Windows Internet Explorer 7"
Subject: VEC: Main Page
Date: Wed, 17 Oct 2007 20:51:09 -0700
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0057_01C810FF.71E4BCE0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.0.6000.16545

This is a multi-part message in MIME format.

------=_NextPart_000_0057_01C810FF.71E4BCE0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://faculty.washington.edu/jstraub/dsa/vec/doc/html/index.html

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>VEC: Main Page</TITLE>
<META http-equiv=3DContent-Type =
content=3Dtext/html;charset=3DUTF-8><LINK=20
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/doxygen.cs=
s"=20
type=3Dtext/css rel=3Dstylesheet><LINK=20
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/tabs.css" =

type=3Dtext/css rel=3Dstylesheet>
<META content=3D"MSHTML 6.00.6000.16546" name=3DGENERATOR></HEAD>
<BODY><!-- Generated by Doxygen 1.5.2 -->
<DIV class=3Dtabs>
<UL>
  <LI class=3Dcurrent><A=20
  =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/index.html=
"><SPAN>Main&nbsp;Page</SPAN></A>=20

  <LI><A=20
  =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/modules.ht=
ml"><SPAN>Modules</SPAN></A>=20

  <LI><A=20
  =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/files.html=
"><SPAN>Files</SPAN></A>=20
  </LI></UL></DIV>
<H1>VEC Documentation</H1>
<P>A <EM>vector</EM> is essentially an open-ended array. Once a vector =
has been=20
created elements can be appended to it indefinitely; when necessary the =
vector=20
will resize itself to accomodate all elements.
<P>The user creates a vector by calling the VEC_create method; this =
method=20
returns an ID that is then used in all subsequent operations. At the =
time of=20
creation the user must specifiy the size of an element of the vector.=20
Optionally, the user may also specify the initial capacity of the vector =
and the=20
number of elements by which to extend the vector should it be necessary =
to do=20
so. If the user chooses not to specify the initial capacity and/or =
extend value=20
suitable defaults will be applied.
<P><CODE>Example:</CODE> Create a vector that will be used to store int =
values.=20
It will have an initial capacity of 20 ints and will be extended (if =
necessary)=20
in increments of 10 ints.=20
<DIV class=3Dfragment><PRE class=3Dfragment> <A class=3Dcode =
title=3D"The type of the ID that represents a vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#g87a13e74ee4a941dea2dd852141c87f1">VEC_ID_t</A>    vec =3D <A =
class=3Dcode title=3D"Creates a new vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#gc61be255f353cba569b7712d29a98499">VEC_create</A>( <SPAN =
class=3Dkeyword>sizeof</SPAN>(<SPAN class=3Dkeywordtype>int</SPAN>), 20, =
10 );
</PRE></DIV>
<P><CODE>Example:</CODE> Create a vector that will be used to store =
RECORD_t=20
values. The initial capacity and extend values will be determined by =
internal=20
defaults.=20
<DIV class=3Dfragment><PRE class=3Dfragment> <A class=3Dcode =
title=3D"The type of the ID that represents a vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#g87a13e74ee4a941dea2dd852141c87f1">VEC_ID_t</A>    vec =3D <A =
class=3Dcode title=3D"Creates a new vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#gc61be255f353cba569b7712d29a98499">VEC_create</A>( <SPAN =
class=3Dkeyword>sizeof</SPAN>(RECORD_t), 0, 0 );
</PRE></DIV>
<P>Items are appended to the vector using the VEC_append method. Item =
values are=20
copied into the vector; each item is assumed to be the size specified at =
the=20
time of vector creation.
<P><CODE>Example:</CODE> Create a vector and populate it with values of =
type=20
RECORD_t.=20
<DIV class=3Dfragment><PRE class=3Dfragment> <A class=3Dcode =
title=3D"The type of the ID that represents a vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#g87a13e74ee4a941dea2dd852141c87f1">VEC_ID_t</A>   vec =3D <A =
class=3Dcode title=3D"Creates a new vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#gc61be255f353cba569b7712d29a98499">VEC_create</A>( <SPAN =
class=3Dkeyword>sizeof</SPAN>(RECORD_t), 0, 0 );
 RECORD_t   *rec =3D get_next_record();

 <SPAN class=3Dkeywordflow>while</SPAN> ( rec !=3D NULL )
 {
     <A class=3Dcode title=3D"Appends a value to the end of a vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#gcc08bb1f536e5cb62d392483cd9a284c">VEC_append</A>( vec, rec );
     rec =3D get_next_record();
 }
</PRE></DIV>
<P>Items in the vector can be interrogated with the VEC_get method, and =
modified=20
with the VEC_put method.
<P><CODE>Example:</CODE> Create and populate a vector. Retrieve values =
from the=20
vector using VEC_get, and modify them using VEC_put. Note that the =
initial=20
population must be done with VEC_append.=20
<DIV class=3Dfragment><PRE class=3Dfragment> <A class=3Dcode =
title=3D"The type of the ID that represents a vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#g87a13e74ee4a941dea2dd852141c87f1">VEC_ID_t</A>    vec =3D <A =
class=3Dcode title=3D"Creates a new vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#gc61be255f353cba569b7712d29a98499">VEC_create</A>( <SPAN =
class=3Dkeyword>sizeof</SPAN>(<SPAN class=3Dkeywordtype>int</SPAN>), 0, =
0 );
 <SPAN class=3Dkeywordtype>int</SPAN>         inx =3D 0;

 <SPAN class=3Dkeywordflow>for</SPAN> ( inx =3D 0 ; inx &lt; 10 ; ++inx =
)
     <A class=3Dcode title=3D"Appends a value to the end of a vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#gcc08bb1f536e5cb62d392483cd9a284c">VEC_append</A>( vec, &amp;inx =
);

 <SPAN class=3Dkeywordflow>for</SPAN> ( inx =3D 0 ; inx &lt; 10 ; ++inx =
)
 {
     <SPAN class=3Dkeywordtype>int</SPAN> *tmp =3D <A class=3Dcode =
title=3D"Returns the address of an item in a vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#g7b59e1a240ae18c13312537fbc724be1">VEC_get</A>( vec, inx );
         printf( <SPAN class=3Dstringliteral>"%d\n"</SPAN>, *tmp );
 }

 <SPAN class=3Dkeywordflow>for</SPAN> ( inx =3D 0 ; inx &lt; 10 ; ++inx =
)
 {
     <SPAN class=3Dkeywordtype>int</SPAN> tmp =3D -inx;
     <A class=3Dcode title=3D"Transfers the contents of an item to =
internal vector storage." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#ge4b19f603d5878bf1fa1a039ac146639">VEC_put</A>( vec, inx, &amp;tmp =
);
 }

 <SPAN class=3Dkeywordflow>for</SPAN> ( inx =3D 0 ; inx &lt; 10 ; ++inx =
)
 {
     <SPAN class=3Dkeywordtype>int</SPAN> *tmp =3D <A class=3Dcode =
title=3D"Returns the address of an item in a vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#g7b59e1a240ae18c13312537fbc724be1">VEC_get</A>( vec, inx );
         printf( <SPAN class=3Dstringliteral>"%d\n"</SPAN>, *tmp );
 }
</PRE></DIV>
<P>Alternatively, iterators may be used. VEC_begin returns a pointer to =
the=20
first element of the vector; VEC_end returns a pointer to the end of the =
vector=20
(that is, one address beyond the end of the vector's internal array). =
The=20
contents of the vector are guaranteed to be contiguous, so pointer =
arithmetic=20
using the iterators yields appropriate results.
<P><CODE>Example:</CODE> Use iterators to traverse an integer vector.=20
<DIV class=3Dfragment><PRE class=3Dfragment> <SPAN =
class=3Dkeyword>static</SPAN> <SPAN class=3Dkeywordtype>void</SPAN> =
traverse_int_vector( <A class=3Dcode title=3D"The type of the ID that =
represents a vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#g87a13e74ee4a941dea2dd852141c87f1">VEC_ID_t</A> vec )
 {
     <SPAN class=3Dkeywordtype>int</SPAN> *begin  =3D <A class=3Dcode =
title=3D"Returns an iterator for a vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#g0023ac32c847d6f9bc11d3d0f0b21227">VEC_begin</A>( vec );
     <SPAN class=3Dkeywordtype>int</SPAN> *end    =3D <A class=3Dcode =
title=3D"Returns a pointer to the end of the vector." =
href=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/group__vec=
.html#gaa9940a68028e8f7aa1a91d849794882">VEC_end</A>( vec );
     <SPAN class=3Dkeywordflow>while</SPAN> ( begin &lt; end )
         printf( <SPAN class=3Dstringliteral>"%d\n"</SPAN>, *begin++ );
 }
</PRE></DIV>
<HR SIZE=3D1>

<ADDRESS style=3D"TEXT-ALIGN: right"><SMALL>Generated on Mon Jun 11 =
21:42:58 2007=20
for VEC by&nbsp; <A href=3D"http://www.doxygen.org/index.html"><IMG =
alt=3Ddoxygen=20
src=3D"http://faculty.washington.edu/jstraub/dsa/vec/doc/html/doxygen.png=
"=20
align=3Dmiddle border=3D0></A> 1.5.2 </SMALL></ADDRESS></BODY></HTML>

------=_NextPart_000_0057_01C810FF.71E4BCE0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://faculty.washington.edu/jstraub/dsa/vec/doc/html/doxygen.png

iVBORw0KGgoAAAANSUhEUgAAAGQAAAAtCAMAAABvaz7CAAAABGdBTUEAANbY1E9YMgAAABl0RVh0
U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAABdUExURQAAAMe+zyImqcjO77a71tPa+pOi
3qCs4LbC9X+Hp9XZ6snKzuHi5nuO1I2h64iZ16Cy+KesucDAsd3dzvn56fX15+vr5UVEOdfWy2hn
XR8dE19YPEA6I21oVf///93AfzEAAAAfdFJOU///////////////////////////////////////
/wDNGXYQAAAD/0lEQVR42mKQQwAGCJCjOgAIIGQjGYSEhYWFaGAJQAChWCIsKioqTANLAAKILpYA
BBBdLAEIILpYAhBAdLEEIIDoYglAANHFEoAAQrVEhDaWAAQQmiUiIrSwBCCAGJALFJglDAyIEgaZ
QhQ6SKKIsgjBZkCVAAggiFJQeQIEIhBLYFxQEQNiQyghSQZJIWipAxGF64MogfGEkMQh6gECiAGs
QwQBhBnEheBsITBbWFxKXBgkA1QIDk0GiCiSPmEGJFOEGJAMBNkCEEAM0KhAUi4kgqwETEpCAlIY
oolBEMwQRzEKrAsWGMIoRsgBBBCDHNRQaGjBVMADD6IZhCUhHmCAJhBxsCUQdcIMUAcguQaiC6wB
IIAYILlDVAgYJEKi4HyCwgW6VxQChKQYwGygoyESQmBSBiQoDBYDhRnECIiRksIQnhxAAEHFJcQZ
GKTEJUAsBiiXAcoVgtoBEgKxJSTB4uJSElBtQiBVYDFJiFlCDAgVIDk5gABcjTECACAIAnlDQxJD
/39mIltOoCcA3D1UR8iS+GwFOJheS/s1jzzqElOB5lLJpJQl7hNAQAEeIOAGm8oNYjGgccVBFA+P
EFhIiAcCuIEmgdhCklIgeQkGbpgEUIQBzOOWAhsANEEOIICAarmAgBscPtwgFgOYC3QhmCsoLsjF
BVcBUQISBrFBMtzcEE0QVdyCkpKCguIMYDGgJWAxBjmAAAJGPAszEAgCY1oQxGAB8wVlIVwWiCBE
BcgrEC4LODOLs8DkuCFsFllZQSAtCDaCRUqKBaJWDiCAQKmeAwRYWFggNIQP5QrKQDgQNtBgGQgT
UmQIQrSANEkJIhQC3QkigZZAeHIAAQTKjIIcSICdQRrKEhAQYJdmBwnJyLBDjAYGIlgAVjDJCLKz
QwxiQDKFnQGsSAqsFsiTAwggcCkhKAAH7IIgnTCONAOIKSglBVLBzgm2BCSAVADKgKXA/mKHGwFi
gSwBcxnkAALQQAY3AMAgCPzRsILS7j9mpdaXXFBJeCFJtA+mIpSNyIiSM6gKUVmY/3SBXl7b2Gd2
LSB9PlcAgUpPQVYEYAQDJCYjlAWmBBk4+fj4OBmAXEZGIJtTRkoGJMLGgNDGitAPoRjkAAKIgYGJ
FMDACzQSqoUByOTlBQkALcGnhwEggBhIsoWBl5+fnxdmCT8c8OI1hAEggBiQazHCAGSJLIzDCbOD
k4AugAAirUYHmcvLgODxgr3BScgQgAAisdkANBfJSKBneIF8gmYABBCpbRMpKSk5tC4NYU0AAUSD
BhAmAAggulgCEEB0sQQggOhiCUAA0cUSgACiiyUAAUQXSwACiC6WAAQQXSwBCCC6WAIQQHSxBCCA
6GIJQIABAGRggsm9U7VPAAAAAElFTkSuQmCC

------=_NextPart_000_0057_01C810FF.71E4BCE0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://faculty.washington.edu/jstraub/dsa/vec/doc/html/doxygen.css

BODY {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H1 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H2 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H3 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H4 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H5 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H6 {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
P {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
CENTER {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
TD {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
TH {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
UL {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
DL {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
DIV {
	FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
BODY {
	FONT-SIZE: 90%
}
TD {
	FONT-SIZE: 90%
}
H1 {
	FONT-SIZE: 160%; TEXT-ALIGN: center
}
H2 {
	FONT-SIZE: 120%
}
H3 {
	FONT-SIZE: 100%
}
CAPTION {
	FONT-WEIGHT: bold
}
DIV.qindex {
	BORDER-RIGHT: #84b0c7 1px solid; PADDING-RIGHT: 2px; BORDER-TOP: =
#84b0c7 1px solid; PADDING-LEFT: 2px; PADDING-BOTTOM: 2px; MARGIN: 2px; =
BORDER-LEFT: #84b0c7 1px solid; WIDTH: 100%; LINE-HEIGHT: 140%; =
PADDING-TOP: 2px; BORDER-BOTTOM: #84b0c7 1px solid; BACKGROUND-COLOR: =
#e8eef2; TEXT-ALIGN: center
}
DIV.nav {
	BORDER-RIGHT: #84b0c7 1px solid; PADDING-RIGHT: 2px; BORDER-TOP: =
#84b0c7 1px solid; PADDING-LEFT: 2px; PADDING-BOTTOM: 2px; MARGIN: 2px; =
BORDER-LEFT: #84b0c7 1px solid; WIDTH: 100%; LINE-HEIGHT: 140%; =
PADDING-TOP: 2px; BORDER-BOTTOM: #84b0c7 1px solid; BACKGROUND-COLOR: =
#e8eef2; TEXT-ALIGN: center
}
DIV.navtab {
	BORDER-RIGHT: #84b0c7 1px solid; PADDING-RIGHT: 2px; BORDER-TOP: =
#84b0c7 1px solid; PADDING-LEFT: 2px; PADDING-BOTTOM: 2px; MARGIN: 2px =
15px 2px 2px; BORDER-LEFT: #84b0c7 1px solid; PADDING-TOP: 2px; =
BORDER-BOTTOM: #84b0c7 1px solid; BACKGROUND-COLOR: #e8eef2; TEXT-ALIGN: =
center
}
TD.navtab {
	FONT-SIZE: 70%
}
A.qindex {
	FONT-WEIGHT: bold; COLOR: #1a419d; TEXT-DECORATION: none
}
A.qindex:visited {
	FONT-WEIGHT: bold; COLOR: #1a419d; TEXT-DECORATION: none
}
A.qindex:hover {
	BACKGROUND-COLOR: #ddddff; TEXT-DECORATION: none
}
A.qindexHL {
	BORDER-RIGHT: #9295c2 1px double; BORDER-TOP: #9295c2 1px double; =
FONT-WEIGHT: bold; BORDER-LEFT: #9295c2 1px double; COLOR: #ffffff; =
BORDER-BOTTOM: #9295c2 1px double; BACKGROUND-COLOR: #6666cc; =
TEXT-DECORATION: none
}
A.qindexHL:hover {
	COLOR: #ffffff; BACKGROUND-COLOR: #6666cc; TEXT-DECORATION: none
}
A.qindexHL:visited {
	COLOR: #ffffff; BACKGROUND-COLOR: #6666cc; TEXT-DECORATION: none
}
A.el {
	FONT-WEIGHT: bold; TEXT-DECORATION: none
}
A.elRef {
	FONT-WEIGHT: bold
}
A.code:link {
	FONT-WEIGHT: normal; COLOR: #0000ff; TEXT-DECORATION: none
}
A.code:visited {
	FONT-WEIGHT: normal; COLOR: #0000ff; TEXT-DECORATION: none
}
A.codeRef:link {
	FONT-WEIGHT: normal; COLOR: #0000ff
}
A.codeRef:visited {
	FONT-WEIGHT: normal; COLOR: #0000ff
}
A:hover {
	BACKGROUND-COLOR: #f2f2ff; TEXT-DECORATION: none
}
DL.el {
	MARGIN-LEFT: -1cm
}
.fragment {
	FONT-SIZE: 95%; FONT-FAMILY: monospace, fixed
}
PRE.fragment {
	BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 6px; BORDER-TOP: =
#cccccc 1px solid; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; MARGIN: 4px =
8px 4px 2px; BORDER-LEFT: #cccccc 1px solid; PADDING-TOP: 4px; =
BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #f5f5f5
}
DIV.ah {
	MARGIN-TOP: 3px; FONT-WEIGHT: bold; MARGIN-BOTTOM: 3px; COLOR: #ffffff; =
BACKGROUND-COLOR: black
}
DIV.groupHeader {
	MARGIN-TOP: 12px; FONT-WEIGHT: bold; MARGIN-BOTTOM: 6px; MARGIN-LEFT: =
16px
}
DIV.groupText {
	FONT-SIZE: 90%; MARGIN-LEFT: 16px; FONT-STYLE: italic
}
BODY {
	BACKGROUND: white; MARGIN-LEFT: 20px; COLOR: black; MARGIN-RIGHT: 20px
}
TD.indexkey {
	BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 10px; BORDER-TOP: =
#cccccc 1px solid; PADDING-LEFT: 10px; FONT-WEIGHT: bold; =
PADDING-BOTTOM: 2px; MARGIN: 2px 0px; BORDER-LEFT: #cccccc 1px solid; =
PADDING-TOP: 2px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: =
#e8eef2
}
TD.indexvalue {
	BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 10px; BORDER-TOP: =
#cccccc 1px solid; PADDING-LEFT: 10px; PADDING-BOTTOM: 2px; MARGIN: 2px =
0px; BORDER-LEFT: #cccccc 1px solid; PADDING-TOP: 2px; BORDER-BOTTOM: =
#cccccc 1px solid; FONT-STYLE: italic; BACKGROUND-COLOR: #e8eef2
}
TR.memlist {
	BACKGROUND-COLOR: #f0f0f0
}
P.formulaDsp {
	TEXT-ALIGN: center
}
IMG.formulaDsp {
=09
}
IMG.formulaInl {
	VERTICAL-ALIGN: middle
}
SPAN.keyword {
	COLOR: #008000
}
SPAN.keywordtype {
	COLOR: #604020
}
SPAN.keywordflow {
	COLOR: #e08000
}
SPAN.comment {
	COLOR: #800000
}
SPAN.preprocessor {
	COLOR: #806020
}
SPAN.stringliteral {
	COLOR: #002080
}
SPAN.charliteral {
	COLOR: #008080
}
.mdescLeft {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 8px; BORDER-TOP: #e0e0e0 1px; =
PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 4px; MARGIN: 0px; =
BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 0px; BORDER-BOTTOM: #e0e0e0 1px; =
FONT-STYLE: italic; BACKGROUND-COLOR: #fafafa
}
.mdescRight {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 8px; BORDER-TOP: #e0e0e0 1px; =
PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 4px; MARGIN: 0px; =
BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 0px; BORDER-BOTTOM: #e0e0e0 1px; =
FONT-STYLE: italic; BACKGROUND-COLOR: #fafafa
}
.memItemLeft {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 0px; BORDER-TOP: #e0e0e0 1px =
solid; PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 0px; MARGIN: =
4px; BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 1px; BORDER-BOTTOM: #e0e0e0 =
1px; BACKGROUND-COLOR: #fafafa
}
.memItemRight {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 8px; BORDER-TOP: #e0e0e0 1px =
solid; PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 0px; MARGIN: =
4px; BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 1px; BORDER-BOTTOM: #e0e0e0 =
1px; BACKGROUND-COLOR: #fafafa
}
.memTemplItemLeft {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 0px; BORDER-TOP: #e0e0e0 1px; =
PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 0px; MARGIN: 4px; =
BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 1px; BORDER-BOTTOM: #e0e0e0 1px; =
BACKGROUND-COLOR: #fafafa
}
.memTemplItemRight {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 8px; BORDER-TOP: #e0e0e0 1px; =
PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 0px; MARGIN: 4px; =
BORDER-LEFT: #e0e0e0 1px; PADDING-TOP: 1px; BORDER-BOTTOM: #e0e0e0 1px; =
BACKGROUND-COLOR: #fafafa
}
.memTemplParams {
	BORDER-RIGHT: #e0e0e0 1px; PADDING-RIGHT: 0px; BORDER-TOP: #e0e0e0 1px =
solid; PADDING-LEFT: 8px; FONT-SIZE: 80%; PADDING-BOTTOM: 0px; MARGIN: =
4px; BORDER-LEFT: #e0e0e0 1px; COLOR: #606060; PADDING-TOP: 1px; =
BORDER-BOTTOM: #e0e0e0 1px; BACKGROUND-COLOR: #fafafa
}
.search {
	FONT-WEIGHT: bold; COLOR: #003399
}
FORM.search {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px
}
INPUT.search {
	FONT-WEIGHT: normal; FONT-SIZE: 75%; COLOR: #000080; BACKGROUND-COLOR: =
#e8eef2
}
TD.tiny {
	FONT-SIZE: 75%
}
A {
	COLOR: #1a41a8
}
A:visited {
	COLOR: #2a3798
}
.dirtab {
	BORDER-RIGHT: #84b0c7 1px solid; PADDING-RIGHT: 4px; BORDER-TOP: =
#84b0c7 1px solid; PADDING-LEFT: 4px; PADDING-BOTTOM: 4px; BORDER-LEFT: =
#84b0c7 1px solid; PADDING-TOP: 4px; BORDER-BOTTOM: #84b0c7 1px solid; =
BORDER-COLLAPSE: collapse
}
TH.dirtab {
	FONT-WEIGHT: bold; BACKGROUND: #e8eef2
}
HR {
	BORDER-RIGHT: medium none; BORDER-TOP: black 1px solid; BORDER-LEFT: =
medium none; BORDER-BOTTOM: medium none; HEIGHT: 1px
}
.memtemplate {
	FONT-WEIGHT: normal; FONT-SIZE: 80%; COLOR: #606060
}
.memnav {
	BORDER-RIGHT: #84b0c7 1px solid; PADDING-RIGHT: 2px; BORDER-TOP: =
#84b0c7 1px solid; PADDING-LEFT: 2px; PADDING-BOTTOM: 2px; MARGIN: 2px =
15px 2px 2px; BORDER-LEFT: #84b0c7 1px solid; PADDING-TOP: 2px; =
BORDER-BOTTOM: #84b0c7 1px solid; BACKGROUND-COLOR: #e8eef2; TEXT-ALIGN: =
center
}
.memitem {
	BORDER-RIGHT: #dedeee 1px solid; PADDING-RIGHT: 4px; BORDER-TOP: =
#dedeee 1px solid; PADDING-LEFT: 4px; PADDING-BOTTOM: 4px; BORDER-LEFT: =
#dedeee 1px solid; PADDING-TOP: 4px; BORDER-BOTTOM: #dedeee 1px solid; =
BACKGROUND-COLOR: #eef3f5; -moz-border-radius: 8px 8px 8px 8px
}
.memname {
	FONT-WEIGHT: bold; WHITE-SPACE: nowrap
}
.memdoc {
	PADDING-LEFT: 10px
}
.memproto {
	BORDER-RIGHT: #84b0c7 1px solid; BORDER-TOP: #84b0c7 1px solid; =
FONT-WEIGHT: bold; BORDER-LEFT: #84b0c7 1px solid; WIDTH: 100%; =
BORDER-BOTTOM: #84b0c7 1px solid; BACKGROUND-COLOR: #d5e1e8; =
-moz-border-radius: 8px 8px 8px 8px
}
.paramkey {
	TEXT-ALIGN: right
}
.paramtype {
	WHITE-SPACE: nowrap
}
.paramname {
	COLOR: #602020; FONT-STYLE: italic; WHITE-SPACE: nowrap
}
.ftvtree {
	MARGIN: 0.5em; FONT-FAMILY: sans-serif
}
.directory {
	FONT-WEIGHT: bold; FONT-SIZE: 9pt
}
.directory H3 {
	FONT-SIZE: 11pt; MARGIN: 1em 0px 0px
}
.directory > H3 {
	MARGIN-TOP: 0px
}
.directory P {
	MARGIN: 0px; WHITE-SPACE: nowrap
}
.directory DIV {
	DISPLAY: none; MARGIN: 0px
}
.directory IMG {
	VERTICAL-ALIGN: -30%
}

------=_NextPart_000_0057_01C810FF.71E4BCE0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://faculty.washington.edu/jstraub/dsa/vec/doc/html/tabs.css

DIV.tabs {
	BACKGROUND: url(tab_b.gif) repeat-x 50% bottom; FLOAT: left; =
MARGIN-BOTTOM: 4px; WIDTH: 100%
}
DIV.tabs UL {
	PADDING-LEFT: 10px; MARGIN: 0px; LIST-STYLE-TYPE: none
}
DIV.tabs LI {
	PADDING-RIGHT: 0px; DISPLAY: inline; PADDING-LEFT: 0px; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-TOP: 0px
}
DIV.tabs FORM {
	PADDING-RIGHT: 0px; DISPLAY: inline; PADDING-LEFT: 0px; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-TOP: 0px
}
DIV.tabs FORM {
	FLOAT: right
}
DIV.tabs A {
	FONT-WEIGHT: bold; FONT-SIZE: x-small; BACKGROUND: url(tab_r.gif) =
no-repeat right top; FLOAT: left; BORDER-BOTTOM: #84b0c7 1px solid; =
TEXT-DECORATION: none
}
DIV.tabs A:hover {
	BACKGROUND-POSITION: 100% -150px
}
DIV.tabs A:link {
	COLOR: #1a419d
}
DIV.tabs A:visited {
	COLOR: #1a419d
}
DIV.tabs A:active {
	COLOR: #1a419d
}
DIV.tabs A:hover {
	COLOR: #1a419d
}
DIV.tabs SPAN {
	PADDING-RIGHT: 9px; DISPLAY: block; PADDING-LEFT: 9px; BACKGROUND: =
url(tab_l.gif) no-repeat left top; FLOAT: left; PADDING-BOTTOM: 5px; =
PADDING-TOP: 5px; WHITE-SPACE: nowrap
}
DIV.tabs INPUT {
	DISPLAY: inline; FONT-SIZE: 1em; FLOAT: right
}
DIV.tabs TD {
	FONT-WEIGHT: bold; FONT-SIZE: x-small; TEXT-DECORATION: none
}
DIV.tabs SPAN {
	FLOAT: none
}
DIV.tabs A:hover SPAN {
	BACKGROUND-POSITION: 0% -150px
}
DIV.tabs LI.current A {
	BORDER-TOP-WIDTH: 0px; BACKGROUND-POSITION: 100% -150px; =
BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: =
0px
}
DIV.tabs LI.current SPAN {
	BACKGROUND-POSITION: 0% -150px; PADDING-BOTTOM: 6px
}
DIV.nav {
	BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: none =
transparent scroll repeat 0% 0%; BORDER-LEFT: medium none; =
BORDER-BOTTOM: #84b0c7 1px solid
}

------=_NextPart_000_0057_01C810FF.71E4BCE0--
